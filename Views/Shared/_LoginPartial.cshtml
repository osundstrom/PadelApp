@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav d-flex align-items-center ms-auto">
@if (SignInManager.IsSignedIn(User))
{
    <div class="navbar d-sm-inline-flex justify-content-between">
    <li class="nav-item">
        <a  class="btn btn-success me-2" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Profil</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Public", new { area = "" })">
            <button  type="submit" class="btn btn-danger me-2">Logout</button>
        </form>
    </li>
    </div>
}
else
{
    <div class="navbar d-sm-inline-flex justify-content-between">
    <li class="nav-item">
        <a class="btn btn-secondary me-2" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="btn btn-success me-2" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
    </div>
}
</ul>
